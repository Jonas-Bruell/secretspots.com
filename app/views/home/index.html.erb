<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Secret Spots</title>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_include_tag "application", "data-turbo-track": "reload" %>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            text-align: center;
        }
        h1 {
            color: #007BFF; 
            font-size: 4em;
            margin-top: 20px;
        }
        #map {
            margin: 40px auto;
            width: 600px;
            height: 400px;
            border: 2px solid #b0b0b0;
        }
    </style>
</head>
<body>
    <h1>Secret Spots</h1>
    <div id="map"></div>

    <script>
        let map;
        let markers = [];

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 50.8503, lng: 4.3517 }, 
                zoom: 12,
            });

            fetchAndUpdateMarkers();

            setInterval(fetchAndUpdateMarkers, 5000); // had to add refresh every 5 seconds, to look for new added secrets and display them
        }

        function fetchAndUpdateMarkers() {
            fetch("<%= secrets_map_data_path %>")
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Network response was not ok: ${response.statusText}`);
                    }
                    return response.json();
                })
                .then(data => {
                    markers.forEach(marker => marker.setMap(null));
                    markers = [];

                    data.forEach(secret => {
                        const marker = new google.maps.Marker({
                            position: {
                                lat: parseFloat(secret.latitude),
                                lng: parseFloat(secret.longitude),
                            },
                            map: map,
                            title: secret.name,
                        });

                        marker.addListener("click", () => {
                            window.location.href = `/secrets/${secret.id}`;
                        });

                        markers.push(marker);
                    });
                })
                .catch(error => {
                    console.error('Error fetching secrets:', error);
                });
        }
    </script>

    <script async
        src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&callback=initMap">
    </script>
</body>
</html>
