<%= stylesheet_link_tag 'secret_new', media: 'all' %>
<% content_for :title, t('.title') %>

<div class="new-secret-page">

  <div>
    <%= link_to secrets_path, class: 'return-link' do %>
      &#8592; <%= t('secrets.back-link') %>
    <% end %>
  </div>


  <h1 class="page-header"><%= t('.new') %></h1>


  <div class="form-layout">

    <div class="form-column">
      <%= render "form", secret: @secret %>
    </div>

 
    <div class="map-section">
      <div id="map"></div>
    </div>
  </div>
</div>

<script>
  let map;
  let marker;

  function initMap() {
    const mapElement = document.getElementById("map");
    const latitudeField = document.getElementById("latitudeField");
    const longitudeField = document.getElementById("longitudeField");
    const addressField = document.getElementById("addressField");

    const mapOptions = {
      center: { lat: 50.8503, lng: 4.3517 }, // Default center
      zoom: 15,
    };

    map = new google.maps.Map(mapElement, mapOptions);

    map.addListener("click", (event) => {
      const clickedLocation = event.latLng;

      if (marker) marker.setMap(null);
      marker = new google.maps.Marker({
        position: clickedLocation,
        map: map,
      });

      latitudeField.value = clickedLocation.lat().toFixed(6);
      longitudeField.value = clickedLocation.lng().toFixed(6);

      fetchAddress(clickedLocation.lat(), clickedLocation.lng(), addressField);
    });
  }

  function fetchAddress(lat, lng, addressField) {
    const geocoder = new google.maps.Geocoder();
    const latlng = { lat: parseFloat(lat), lng: parseFloat(lng) };

    geocoder.geocode({ location: latlng }, (results, status) => {
      if (status === "OK" && results[0]) {
        addressField.value = results[0].formatted_address;
      } else {
        addressField.value = "Address not found";
      }
    });
  }
</script>

<script async src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.dig('GOOGLE_MAPS_API_KEY') %>&callback=initMap&libraries=places"></script>