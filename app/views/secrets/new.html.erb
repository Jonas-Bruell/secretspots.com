<%= stylesheet_link_tag "newSecret" %>
<% content_for :title, t('.title') %>

<div class="newSecretForm" style="max-width: 1200px; margin: 0 auto;">
  <!-- pijltje -->
  <div style="margin-bottom: 20px;">
    <%= link_to secrets_path, style: "text-decoration: none; font-size: 18px; color: #007bff;" do %>
      &#8592; <%= t('secrets.back-link') %>
    <% end %>
  </div>

  <!-- header  -->
  <h1 style="text-align: center; color: #007BFF; margin-bottom: 20px;">
    <%= t('.new') %>
  </h1>

  <!-- Form and Map -->
  <div style="display: flex; flex-wrap: wrap; gap: 20px; justify-content: center;">
    <!-- Secret Form -->
    <div style="flex: 1; min-width: 300px;">
      <%= form_with(model: @secret, url: secrets_path, method: :post, local: true) do |form| %>
        <!-- Name -->
        <div style="margin-bottom: 15px;">
          <%= form.label :name, t('global.name') %>
          <%= form.text_field :name, required: true, style: "width: 100%; padding: 5px;" %>
        </div>

        <!-- description field -->
        <div style="margin-bottom: 15px;">
          <%= form.label :description, t('global.description') %>
          <%= form.text_area :description, required: true, rows: 3, style: "width: 100%; padding: 5px;" %>
        </div>

        <!-- image uploading field  -->
        <div style="margin-bottom: 15px;">
          <%= form.label :image, "Upload Image" %>
          <%= form.file_field :image, required: true, style: "width: 100%; padding: 5px;" %>
        </div>

        <!-- lat -->
        <div style="margin-bottom: 15px;">
          <%= form.label :latitude, "Latitude" %>
          <%= form.text_field :latitude, id: "latitudeField", readonly: true, required: true, style: "width: 100%; padding: 5px; background-color: #f0f0f0;" %>
        </div>

        <!-- long -->
        <div style="margin-bottom: 15px;">
          <%= form.label :longitude, "Longitude" %>
          <%= form.text_field :longitude, id: "longitudeField", readonly: true, required: true, style: "width: 100%; padding: 5px; background-color: #f0f0f0;" %>
        </div>

        <!-- adress  -->
        <div style="margin-bottom: 15px;">
          <%= form.label :address, "Address" %>
          <%= form.text_field :address, id: "addressField", readonly: true, required: true, style: "width: 100%; padding: 5px; background-color: #f0f0f0;" %>
        </div>

        <!-- submit btn -->
        <div>
          <%= form.submit t('.create'), style: "width: 100%; padding: 10px; background-color: #007BFF; color: white; border: none; font-size: 16px; cursor: pointer;" %>
        </div>
      <% end %>
    </div>

    <!-- map implementatie -->
    <div style="flex: 1; min-width: 300px; height: 400px; border: 1px solid #ddd;">
      <div id="map" style="width: 100%; height: 100%;"></div>
    </div>
  </div>
</div>

<script>
  let map;
  let marker;

  function initMap() {
    const mapElement = document.getElementById("map");
    const latitudeField = document.getElementById("latitudeField");
    const longitudeField = document.getElementById("longitudeField");
    const addressField = document.getElementById("addressField");

    // parameters van de map
    const mapOptions = {
      center: { lat: 50.8503, lng: 4.3517 }, // Default location: Brussels
      zoom: 12
    };

    // init map
    map = new google.maps.Map(mapElement, mapOptions);

    // verander locatie bij nieuwe click
    map.addListener("click", (event) => {
      const clickedLocation = event.latLng;

      
      if (marker) marker.setMap(null);
      marker = new google.maps.Marker({
        position: clickedLocation,
        map: map
      });

      // Update van lat en long
      latitudeField.value = clickedLocation.lat().toFixed(6);
      longitudeField.value = clickedLocation.lng().toFixed(6);

      //  update address
      fetchAddress(clickedLocation.lat(), clickedLocation.lng(), addressField);
    });
  }

  // Function to fetch address using Google Geocoding API
  function fetchAddress(lat, lng, addressField) {
    const geocoder = new google.maps.Geocoder();
    const latlng = { lat: parseFloat(lat), lng: parseFloat(lng) };

    geocoder.geocode({ location: latlng }, (results, status) => {
      if (status === "OK" && results[0]) {
        addressField.value = results[0].formatted_address;
      } else {
        addressField.value = "Address not found";
      }
    });
  }
</script>

<script async
  src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.dig('GOOGLE_MAPS_API_KEY') %>&callback=initMap&libraries=places">
</script>
