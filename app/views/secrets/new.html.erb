<%= stylesheet_link_tag 'secret_new', media: 'all' %>
<% content_for :title, t('.title') %>

<div class="new-secret-page">
  
  <div>
    <%= link_to secrets_path, class: 'return-link' do %>
      &#8592; <%= t('secrets.back-link') %>
    <% end %>
  </div>

 
  <h1 class="page-header"><%= t('.new') %></h1>

  <div class="form-map-layout" style="display: flex; gap: 20px; margin-top: 20px; flex-wrap: wrap;">
    <!-- Form -->
    <div class="form-section" style="flex: 1; min-width: 300px;">
      <%= form_with(model: @secret, local: true) do |form| %>
        <div class="form-group" style="margin-bottom: 15px;">
          <%= form.label :name, "Name:" %>
          <%= form.text_field :name, class: "form-input", required: true, style: "width: 100%;" %>
        </div>

        <div class="form-group" style="margin-bottom: 15px;">
          <%= form.label :description, "Description:" %>
          <%= form.text_area :description, rows: 5, class: "form-input", required: true, style: "width: 100%;" %>
        </div>

        <div class="form-group" style="margin-bottom: 15px;">
          <%= form.label :image, "Upload Picture:" %>
          <%= form.file_field :image, class: "form-input", style: "width: 100%;" %>
        </div>

        <div class="form-group" style="margin-bottom: 15px;">
          <%= form.label :tags, "Select Tags:" %>
          <div>
            <% SecretTag::VALID_TAGS.each do |tag| %>
              <label style="margin-right: 10px;">
                <%= check_box_tag "secret[tag_names][]", tag, @secret.secret_tags&.map(&:name)&.include?(tag) %>
                <%= tag %>
              </label>
            <% end %>
          </div>
        </div>

        <div class="form-group" style="margin-bottom: 15px;">
          <%= form.label :latitude, "Latitude:" %>
          <%= form.text_field :latitude, id: "latitudeField_new", readonly: true, class: "readonly-input", style: "width: 100%;" %>
        </div>

        <div class="form-group" style="margin-bottom: 15px;">
          <%= form.label :longitude, "Longitude:" %>
          <%= form.text_field :longitude, id: "longitudeField_new", readonly: true, class: "readonly-input", style: "width: 100%;" %>
        </div>

        <div class="form-group" style="margin-bottom: 15px;">
          <%= form.label :address, "Address:" %>
          <%= form.text_field :address, id: "addressField_new", readonly: true, class: "readonly-input", style: "width: 100%;" %>
        </div>

        <div class="form-actions" style="margin-top: 15px;">
          <%= form.submit "Create Secret", class: "submit-button", style: "padding: 10px 15px; background-color: #007BFF; color: white; border: none; border-radius: 5px; cursor: pointer;" %>
        </div>
      <% end %>
    </div>

    <!-- Map-->
    <div class="map-container" style="flex: 1; min-width: 400px;">
      <div id="map_new" style="width: 100%; height: 400px; border: 1px solid #ddd; border-radius: 5px;"></div>
    </div>
  </div>
</div>

<script>
  let mapNew;
  let markerNew; 
  function initMapNew() {
    const latitudeFieldNew = document.getElementById("latitudeField_new");
    const longitudeFieldNew = document.getElementById("longitudeField_new");
    const addressFieldNew = document.getElementById("addressField_new");

    // geolocate the user 
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };

          initializeMapNew(userLocation, latitudeFieldNew, longitudeFieldNew, addressFieldNew);
        },
        () => {
          console.warn("Geolocation failed. Using default location.");
          initializeMapNew({ lat: 50.8503, lng: 4.3517 }, latitudeFieldNew, longitudeFieldNew, addressFieldNew); 
        }
      );
    } else {
      console.warn("Geolocation not supported. Using default location.");
      initializeMapNew({ lat: 50.8503, lng: 4.3517 }, latitudeFieldNew, longitudeFieldNew, addressFieldNew);
    }
  }

  
  function initializeMapNew(centerLocation, latitudeFieldNew, longitudeFieldNew, addressFieldNew) {
 
    latitudeFieldNew.value = centerLocation.lat.toFixed(6);
    longitudeFieldNew.value = centerLocation.lng.toFixed(6);

    mapNew = new google.maps.Map(document.getElementById("map_new"), {
      center: centerLocation,
      zoom: 15,
    });

    markerNew = new google.maps.Marker({
      position: centerLocation,
      map: mapNew,
    });

   
    fetchAddressNew(centerLocation, addressFieldNew);

 
    mapNew.addListener("click", (event) => {
      const clickedLocationNew = event.latLng;

      placeMarkerNew(clickedLocationNew);

      // Update latitude and longitude fields
      latitudeFieldNew.value = clickedLocationNew.lat().toFixed(6);
      longitudeFieldNew.value = clickedLocationNew.lng().toFixed(6);

      
      fetchAddressNew(clickedLocationNew, addressFieldNew);
    });
  }


  function placeMarkerNew(location) {
    if (markerNew) markerNew.setMap(null); 
    markerNew = new google.maps.Marker({
      position: location,
      map: mapNew,
    });
  }


  function fetchAddressNew(location, addressField) {
    const geocoderNew = new google.maps.Geocoder();
    geocoderNew.geocode({ location: location }, (results, status) => {
      if (status === "OK" && results[0]) {
        addressField.value = results[0].formatted_address;
      } else {
        addressField.value = "Address not found";
      }
    });
  }
</script>


<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.dig('GOOGLE_MAPS_API_KEY') %>&callback=initMapNew&libraries=places">
</script>
